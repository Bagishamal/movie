# Generated by Django 3.2.9 on 2021-11-29 11:51

import datetime
from django.db import migrations, models
import django.db.models.deletion
import movies.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500, unique=True, verbose_name='Категория')),
                ('Description', models.TextField(blank=True, verbose_name='Описание')),
                ('Url', models.SlugField(allow_unicode=True, max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='DirectorsActors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True, verbose_name='Имя')),
                ('Age', models.PositiveSmallIntegerField(default=0, verbose_name='Возраст')),
                ('Description', models.TextField(verbose_name='Описание')),
                ('Image', models.ImageField(height_field=300, upload_to='directors/%Y/%m/%d', verbose_name='Фото', width_field=300)),
            ],
            options={
                'verbose_name': 'Режиссеры и актеры',
                'verbose_name_plural': 'Режиссеры и актеры',
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True, verbose_name='Имя')),
                ('Description', models.TextField(blank=True, max_length=160, verbose_name='Описание')),
                ('Url', models.SlugField(allow_unicode=True, max_length=25, unique=True, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Жанры',
                'verbose_name_plural': 'Жанры',
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('Tagline', models.CharField(max_length=100, verbose_name='Слоган')),
                ('Description', models.TextField(default='', verbose_name='Описание')),
                ('Poster', models.ImageField(height_field=300, upload_to=movies.models.user_directory_path, verbose_name='Постеры', width_field=300)),
                ('Year', models.DateField(default='2021', verbose_name='Дата выхода')),
                ('Country', models.CharField(max_length=30, verbose_name='Страна')),
                ('World_premier', models.CharField(default=datetime.date.today, max_length=100, verbose_name='Премьера')),
                ('Budjet', models.PositiveSmallIntegerField(default=0, help_text='Указывать сумму в долларах', verbose_name='Бюджет')),
                ('Fees_in_Usa', models.PositiveSmallIntegerField(default=0, help_text='Указывать сумму в долларах', verbose_name='Сборы в США')),
                ('Fees_in_world', models.PositiveSmallIntegerField(default=0, help_text='Указывать сумму в долларах', verbose_name='Сборы в мире')),
                ('Url', models.SlugField(allow_unicode=True, max_length=160, unique=True)),
                ('Draft', models.BooleanField(default=False, verbose_name='Черновик')),
                ('Actors', models.ManyToManyField(related_name='film_actors', to='movies.DirectorsActors', verbose_name='Актеры')),
                ('Category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.category', verbose_name='Категория')),
                ('Director', models.ManyToManyField(related_name='film_director', to='movies.DirectorsActors', verbose_name='Режиссер')),
                ('Genre', models.ManyToManyField(to='movies.Genre', verbose_name='Жанры')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
                'ordering': ['Title'],
            },
        ),
        migrations.CreateModel(
            name='RatingStars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Value', models.PositiveSmallIntegerField(default=5, verbose_name='Значение рейтинга')),
            ],
            options={
                'verbose_name': 'Количество звезд в рейтинге',
                'verbose_name_plural': 'Количество звезд в рейтинге',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Email', models.EmailField(max_length=254, verbose_name='Email')),
                ('Name', models.CharField(max_length=100, unique=True, verbose_name='Имя пользователя')),
                ('Text', models.TextField(max_length=5000, verbose_name='Комментарии')),
                ('Movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie', verbose_name='Фильм')),
                ('Parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies.reviews', to_field='Name', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ip', models.GenericIPAddressField(null=True, protocol='IPv4', verbose_name='Ip адрес')),
                ('Movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.movie', verbose_name='Фильм')),
                ('Stars', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.ratingstars', verbose_name='Рейтинг')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
            },
        ),
        migrations.CreateModel(
            name='FrameOfMovies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('Description', models.TextField(verbose_name='Описание')),
                ('Image', models.ImageField(height_field=300, max_length=50, upload_to=movies.models.get_url_for_frames, verbose_name='Кадры', width_field=300)),
                ('Movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie', verbose_name='')),
            ],
            options={
                'verbose_name': 'Кадр из фильма',
                'verbose_name_plural': 'Кадры из фильма',
                'ordering': ['Title'],
            },
        ),
    ]
